def getReward(self):
            reward = []
            for drone in self.drones:
                states = drone.getState()
                x,y = states[0]
                x = int(x//GRID_SZ)
                y = int(y//GRID_SZ)
                rem_charge = states[3]/GRID_SZ
                l1_dist2par = states[-1]/GRID_SZ
                if self.totalArea[x+G_PADDING, y+G_PADDING] == 50:
                    # unexplored region => new area 
                    reward.append(25)
                elif self.totalArea[x+G_PADDING, y+G_PADDING] == 255:
                    # explored region => old area
                    reward.append(-1)
                else:
                    reward.append(0)
                    
                if rem_charge <= 0:
                    # penalize for die
                    reward[-1] += -1000
                   
                if (rem_charge - l1_dist2par*1.2) >= 0:
                    # if inside charge radius 
                    reward[-1] +=  1
                else:
                    # if outside charge radius
                    reward[-1] += -50
                    
                if l1_dist2par <= 1 and rem_charge <=5:
                    reward[-1] += 50
                    
            return reward

self.maxReplayMemory = 30000
        self.epsilon = 1.0
        self.minEpsilon = 0.01
        self.epsilonDecay = 0.9990
        self.discount = 0.95
        self.learningRate = 0.002
        self.batchSize = 256